// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// c_heat_neumann
Rcpp::NumericMatrix c_heat_neumann(int n, Rcpp::NumericMatrix soln, double alpha, double eps, double dt, int space, double dx);
RcppExport SEXP _heateq_c_heat_neumann(SEXP nSEXP, SEXP solnSEXP, SEXP alphaSEXP, SEXP epsSEXP, SEXP dtSEXP, SEXP spaceSEXP, SEXP dxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type soln(solnSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< int >::type space(spaceSEXP);
    Rcpp::traits::input_parameter< double >::type dx(dxSEXP);
    rcpp_result_gen = Rcpp::wrap(c_heat_neumann(n, soln, alpha, eps, dt, space, dx));
    return rcpp_result_gen;
END_RCPP
}
// c_heat_dirichlet
Rcpp::NumericMatrix c_heat_dirichlet(int n, Rcpp::NumericMatrix soln, double alpha, double eps, double dt, int space, double dx);
RcppExport SEXP _heateq_c_heat_dirichlet(SEXP nSEXP, SEXP solnSEXP, SEXP alphaSEXP, SEXP epsSEXP, SEXP dtSEXP, SEXP spaceSEXP, SEXP dxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type soln(solnSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< int >::type space(spaceSEXP);
    Rcpp::traits::input_parameter< double >::type dx(dxSEXP);
    rcpp_result_gen = Rcpp::wrap(c_heat_dirichlet(n, soln, alpha, eps, dt, space, dx));
    return rcpp_result_gen;
END_RCPP
}
// c_heat
Rcpp::NumericMatrix c_heat(int n, Rcpp::NumericVector init, Rcpp::String boundary, double alpha, double dt, double eps, double dx);
RcppExport SEXP _heateq_c_heat(SEXP nSEXP, SEXP initSEXP, SEXP boundarySEXP, SEXP alphaSEXP, SEXP dtSEXP, SEXP epsSEXP, SEXP dxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type init(initSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type boundary(boundarySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type dx(dxSEXP);
    rcpp_result_gen = Rcpp::wrap(c_heat(n, init, boundary, alpha, dt, eps, dx));
    return rcpp_result_gen;
END_RCPP
}
// c_heat_dirichlet_memory
Rcpp::NumericVector c_heat_dirichlet_memory(int n, Rcpp::NumericVector init, double alpha, double eps, double dt, int space, double dx);
RcppExport SEXP _heateq_c_heat_dirichlet_memory(SEXP nSEXP, SEXP initSEXP, SEXP alphaSEXP, SEXP epsSEXP, SEXP dtSEXP, SEXP spaceSEXP, SEXP dxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type init(initSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< int >::type space(spaceSEXP);
    Rcpp::traits::input_parameter< double >::type dx(dxSEXP);
    rcpp_result_gen = Rcpp::wrap(c_heat_dirichlet_memory(n, init, alpha, eps, dt, space, dx));
    return rcpp_result_gen;
END_RCPP
}
// c_heat_neumann_memory
Rcpp::NumericVector c_heat_neumann_memory(int n, Rcpp::NumericVector init, double alpha, double eps, double dt, int space, double dx);
RcppExport SEXP _heateq_c_heat_neumann_memory(SEXP nSEXP, SEXP initSEXP, SEXP alphaSEXP, SEXP epsSEXP, SEXP dtSEXP, SEXP spaceSEXP, SEXP dxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type init(initSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< int >::type space(spaceSEXP);
    Rcpp::traits::input_parameter< double >::type dx(dxSEXP);
    rcpp_result_gen = Rcpp::wrap(c_heat_neumann_memory(n, init, alpha, eps, dt, space, dx));
    return rcpp_result_gen;
END_RCPP
}
// c_heat_memory
Rcpp::NumericVector c_heat_memory(int n, Rcpp::NumericVector init, Rcpp::String boundary, double alpha, double dt, double eps, double dx);
RcppExport SEXP _heateq_c_heat_memory(SEXP nSEXP, SEXP initSEXP, SEXP boundarySEXP, SEXP alphaSEXP, SEXP dtSEXP, SEXP epsSEXP, SEXP dxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type init(initSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type boundary(boundarySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type dx(dxSEXP);
    rcpp_result_gen = Rcpp::wrap(c_heat_memory(n, init, boundary, alpha, dt, eps, dx));
    return rcpp_result_gen;
END_RCPP
}
// heateq_dirichlet
Rcpp::NumericMatrix heateq_dirichlet(int n, Rcpp::NumericMatrix y, double c, double dt, double dx);
RcppExport SEXP _heateq_heateq_dirichlet(SEXP nSEXP, SEXP ySEXP, SEXP cSEXP, SEXP dtSEXP, SEXP dxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type dx(dxSEXP);
    rcpp_result_gen = Rcpp::wrap(heateq_dirichlet(n, y, c, dt, dx));
    return rcpp_result_gen;
END_RCPP
}
// heateq_neumann
Rcpp::NumericMatrix heateq_neumann(int n, Rcpp::NumericMatrix y, double c, double dt, double dx);
RcppExport SEXP _heateq_heateq_neumann(SEXP nSEXP, SEXP ySEXP, SEXP cSEXP, SEXP dtSEXP, SEXP dxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type dx(dxSEXP);
    rcpp_result_gen = Rcpp::wrap(heateq_neumann(n, y, c, dt, dx));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_heateq_c_heat_neumann", (DL_FUNC) &_heateq_c_heat_neumann, 7},
    {"_heateq_c_heat_dirichlet", (DL_FUNC) &_heateq_c_heat_dirichlet, 7},
    {"_heateq_c_heat", (DL_FUNC) &_heateq_c_heat, 7},
    {"_heateq_c_heat_dirichlet_memory", (DL_FUNC) &_heateq_c_heat_dirichlet_memory, 7},
    {"_heateq_c_heat_neumann_memory", (DL_FUNC) &_heateq_c_heat_neumann_memory, 7},
    {"_heateq_c_heat_memory", (DL_FUNC) &_heateq_c_heat_memory, 7},
    {"_heateq_heateq_dirichlet", (DL_FUNC) &_heateq_heateq_dirichlet, 5},
    {"_heateq_heateq_neumann", (DL_FUNC) &_heateq_heateq_neumann, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_heateq(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
