// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// c_heat
Rcpp::NumericMatrix c_heat(int n, Rcpp::NumericVector init, Rcpp::String boundary, double alpha, double dt, double eps);
RcppExport SEXP _heateq_c_heat(SEXP nSEXP, SEXP initSEXP, SEXP boundarySEXP, SEXP alphaSEXP, SEXP dtSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type init(initSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type boundary(boundarySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(c_heat(n, init, boundary, alpha, dt, eps));
    return rcpp_result_gen;
END_RCPP
}
// c_heat_memory
Rcpp::NumericVector c_heat_memory(int n, Rcpp::NumericVector init, Rcpp::String boundary, double alpha, double dt, double eps);
RcppExport SEXP _heateq_c_heat_memory(SEXP nSEXP, SEXP initSEXP, SEXP boundarySEXP, SEXP alphaSEXP, SEXP dtSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type init(initSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type boundary(boundarySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(c_heat_memory(n, init, boundary, alpha, dt, eps));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_heateq_c_heat", (DL_FUNC) &_heateq_c_heat, 6},
    {"_heateq_c_heat_memory", (DL_FUNC) &_heateq_c_heat_memory, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_heateq(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
