% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/one.d.heat.eq.neumann.R
\name{one.d.heat.eq.neumann}
\alias{one.d.heat.eq.neumann}
\title{Numerical Solution to the Heat Equation with Neumann boundary conditions, written in R}
\usage{
one.d.heat.eq.neumann(n, soln, alpha, dt, eps)
}
\arguments{
\item{n}{the Number of Time steps you wish to solve for.}

\item{soln}{the initial layout of points (must be a vector).}

\item{alpha}{the heat equation is parameterized here by dU/dt = alpha * d^2U/(dx)^2, if you set alpha large you may need to set the time step shorter.}

\item{dt}{the length of each time step.}

\item{eps}{sometimes I've observed unexpected behaviour when the numbers get very small, in order to combat this I include an epsilon such that if a value is within that neighbourhood of zero they will be set to zero.  (Epsilon can be set to zero if you do not wish for this confound.)}
}
\value{

}
\description{
This function is not very memory efficient since it saves all intermediate steps.  However it gives you all of the information.  If you don't know what you want you should use the C++ version instead.
}
